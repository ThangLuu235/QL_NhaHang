/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.ConnectDB;
import java.awt.Color;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Table;

/**
 *
 * @author USER
 */
public class Ban extends javax.swing.JFrame {

    ConnectDB cn = new ConnectDB();
    Connection conn;
    static int orderid;
    static int foodQuantity, quantity;
    static int odetailid, foodid;
    ArrayList<Table> tables;
    final String header[] = {"OrderDetailsID", "OrderID", "FoodId", "FoodName", "Price", "Quantity"};
    final DefaultTableModel tb = new DefaultTableModel(header, 0);

    /**
     * Creates new form Ban
     */
    public Ban() {
        initComponents();
        loadTable();
        tbDatMon.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (tbDatMon.getSelectedRow() >= 0) {
                    quantity = (Integer.parseInt(tbDatMon.getValueAt(tbDatMon.getSelectedRow(), 5) + ""));
                    odetailid = (Integer.parseInt(tbDatMon.getValueAt(tbDatMon.getSelectedRow(), 0) + ""));
                    foodid = (Integer.parseInt(tbDatMon.getValueAt(tbDatMon.getSelectedRow(), 2) + ""));
                    laySoLuongMonAn();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblMaBan = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnXoa = new javax.swing.JButton();
        btnBan1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDatMon = new javax.swing.JTable();
        btnXuatThongTin = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnBan2 = new javax.swing.JButton();
        btnBan3 = new javax.swing.JButton();
        btnBan4 = new javax.swing.JButton();
        btnBan5 = new javax.swing.JButton();
        btnBan6 = new javax.swing.JButton();
        btnBan7 = new javax.swing.JButton();
        btnBan8 = new javax.swing.JButton();
        btnBan9 = new javax.swing.JButton();
        btnBan10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(64, 66, 88));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ĐẶT MÓN");

        lblMaBan.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblMaBan.setForeground(new java.awt.Color(255, 255, 255));
        lblMaBan.setText("Chọn bàn");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Mã bàn:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(lblMaBan)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaBan)
                    .addComponent(jLabel8))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnBan1.setText("Bàn 1");
        btnBan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBan1ActionPerformed(evt);
            }
        });

        tbDatMon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbDatMon.setShowGrid(true);
        tbDatMon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDatMonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbDatMon);

        btnXuatThongTin.setText("Xuất thông tin");

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnThanhToan.setText("Xác nhận thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Mã món");

        btnBan2.setText("Bàn 2");
        btnBan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBan2ActionPerformed(evt);
            }
        });

        btnBan3.setText("Bàn 3");
        btnBan3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBan3ActionPerformed(evt);
            }
        });

        btnBan4.setText("Bàn 4");
        btnBan4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBan4ActionPerformed(evt);
            }
        });

        btnBan5.setText("Bàn 5");
        btnBan5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBan5ActionPerformed(evt);
            }
        });

        btnBan6.setText("Bàn 6");
        btnBan6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBan6ActionPerformed(evt);
            }
        });

        btnBan7.setText("Bàn 7");
        btnBan7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBan7ActionPerformed(evt);
            }
        });

        btnBan8.setText("Bàn 8");
        btnBan8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBan8ActionPerformed(evt);
            }
        });

        btnBan9.setText("Bàn 9");
        btnBan9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBan9ActionPerformed(evt);
            }
        });

        btnBan10.setText("Bàn 10");
        btnBan10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBan10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(btnXuatThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnBan2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnBan3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnBan1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnBan4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnBan5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnBan7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnBan6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnBan8, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBan9, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBan10, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(167, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(484, 484, 484)
                    .addComponent(jLabel6)
                    .addContainerGap(503, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBan1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBan2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBan4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBan3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBan6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBan5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBan8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBan7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBan10, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBan9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXuatThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(294, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(455, 455, 455)
                    .addComponent(jLabel6)
                    .addContainerGap(455, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void loadTable() {
        tables = new ArrayList<Table>();
        try {
            conn = cn.getConnection();
            String sql = "select * from Tables";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            while (rs.next()) {
                int tableid = rs.getInt("TableID");
                int status = rs.getInt("Status");
                Table tb = new Table(tableid, status);
                tables.add(tb);
            }
            st.close();
            rs.close();
            int id = Integer.parseInt(this.btnBan1.getText().substring(4));
            for (Table i : tables) {
                if (i.getTableId() == id) {
                    if (i.getStatus() == 1) {
                        this.btnBan1.setBackground(Color.red);
                        break;
                    } else if (i.getStatus() == 0) {
                        this.btnBan1.setBackground(Color.white);
                        break;
                    }else if (i.getStatus() == 2) {
                        this.btnBan1.setBackground(Color.yellow);
                        break;
                    }
                }
            }
            id = Integer.parseInt(this.btnBan2.getText().substring(4));
            for (Table i : tables) {
                if (i.getTableId() == id) {
                    if (i.getStatus() == 1) {
                        this.btnBan2.setBackground(Color.red);
                        break;
                    } else if (i.getStatus() == 0) {
                        this.btnBan2.setBackground(Color.white);
                        break;
                    }else if (i.getStatus() == 2) {
                        this.btnBan2.setBackground(Color.yellow);
                        break;
                    }
                }
            }
            id = Integer.parseInt(this.btnBan3.getText().substring(4));
            for (Table i : tables) {
                if (i.getTableId() == id) {
                    if (i.getStatus() == 1) {
                        this.btnBan3.setBackground(Color.red);
                        break;
                    } else if (i.getStatus() == 0) {
                        this.btnBan3.setBackground(Color.white);
                        break;
                    }else if (i.getStatus() == 2) {
                        this.btnBan3.setBackground(Color.yellow);
                        break;
                    }
                }
            }
            id = Integer.parseInt(this.btnBan4.getText().substring(4));
            for (Table i : tables) {
                if (i.getTableId() == id) {
                    if (i.getStatus() == 1) {
                        this.btnBan4.setBackground(Color.red);
                        break;
                    } else if (i.getStatus() == 0) {
                        this.btnBan4.setBackground(Color.white);
                        break;
                    }else if (i.getStatus() == 2) {
                        this.btnBan4.setBackground(Color.yellow);
                        break;
                    }
                }
            }
            id = Integer.parseInt(this.btnBan5.getText().substring(4));
            for (Table i : tables) {
                if (i.getTableId() == id) {
                    if (i.getStatus() == 1) {
                        this.btnBan5.setBackground(Color.red);
                        break;
                    } else if (i.getStatus() == 0) {
                        this.btnBan5.setBackground(Color.white);
                        break;
                    }else if (i.getStatus() == 2) {
                        this.btnBan5.setBackground(Color.yellow);
                        break;
                    }
                }
            }
            id = Integer.parseInt(this.btnBan6.getText().substring(4));
            for (Table i : tables) {
                if (i.getTableId() == id) {
                    if (i.getStatus() == 1) {
                        this.btnBan6.setBackground(Color.red);
                        break;
                    } else if (i.getStatus() == 0) {
                        this.btnBan6.setBackground(Color.white);
                        break;
                    }else if (i.getStatus() == 2) {
                        this.btnBan6.setBackground(Color.yellow);
                        break;
                    }
                }
            }
            id = Integer.parseInt(this.btnBan7.getText().substring(4));
            for (Table i : tables) {
                if (i.getTableId() == id) {
                    if (i.getStatus() == 1) {
                        this.btnBan7.setBackground(Color.red);
                        break;
                    } else if (i.getStatus() == 0) {
                        this.btnBan7.setBackground(Color.white);
                        break;
                    }else if (i.getStatus() == 2) {
                        this.btnBan7.setBackground(Color.yellow);
                        break;
                    }
                }
            }
            id = Integer.parseInt(this.btnBan8.getText().substring(4));
            for (Table i : tables) {
                if (i.getTableId() == id) {
                    if (i.getStatus() == 1) {
                        this.btnBan8.setBackground(Color.red);
                        break;
                    } else if (i.getStatus() == 0) {
                        this.btnBan8.setBackground(Color.white);
                        break;
                    }else if (i.getStatus() == 2) {
                        this.btnBan8.setBackground(Color.yellow);
                        break;
                    }
                }
            }
            id = Integer.parseInt(this.btnBan9.getText().substring(4));
            for (Table i : tables) {
                if (i.getTableId() == id) {
                    if (i.getStatus() == 1) {
                        this.btnBan9.setBackground(Color.red);
                        break;
                    } else if (i.getStatus() == 0) {
                        this.btnBan9.setBackground(Color.white);
                        break;
                    }else if (i.getStatus() == 2) {
                        this.btnBan9.setBackground(Color.yellow);
                        break;
                    }
                }
            }
            id = Integer.parseInt(this.btnBan10.getText().substring(4));
            for (Table i : tables) {
                if (i.getTableId() == id) {
                    if (i.getStatus() == 1) {
                        this.btnBan10.setBackground(Color.red);
                        break;
                    } else if (i.getStatus() == 0) {
                        this.btnBan10.setBackground(Color.white);
                        break;
                    }else if (i.getStatus() == 2) {
                        this.btnBan10.setBackground(Color.yellow);
                        break;
                    }
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void loadBang(String s) {
        try {
            conn = cn.getConnection();
            int number;
            int count = 0;
            Vector row;
            String sql = "SELECT * FROM OrderDetails od\n"
                    + "WHERE od.TableID = ? and od.OrderID IN (\n"
                    + "  SELECT o.OrderID FROM Orders o WHERE o.Stt = 0\n"
                    + ");";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setInt(1, Integer.parseInt(s.substring(4)));
            ResultSet rs = statement.executeQuery();
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();
            tb.setRowCount(0);
            while (rs.next()) {
                row = new Vector();
                orderid = rs.getInt("OrderID");
                count++;
                row.addElement(rs.getString(1));
                row.addElement(rs.getString(2));
                row.addElement(rs.getString(3));
                row.addElement(rs.getString(4));
                row.addElement(rs.getString(7));
                row.addElement(rs.getString(5));
                tb.addRow(row);
                tbDatMon.setModel(tb);
            }
            statement.close();
            rs.close();
            if (count == 0) {
                orderid = 0;
            }
        } catch (Exception ex) {
        }

    }

    public void xoaMonAn() {
        int num = 0;
        try {
            conn = cn.getConnection();
            if (tbDatMon.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Hãy chọn một sản phẩm để xóa");
            } else {
                int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa sản phẩm này không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
                if (choice == JOptionPane.YES_OPTION) {
                    JOptionPane.showMessageDialog(this, "Xóa sản phẩm thành công");
                    String sql = "DELETE FROM OrderDetails WHERE OrderDetailsID = ?";
                    try (PreparedStatement stmt = conn.prepareStatement(sql)) {
                        stmt.setInt(1, Integer.parseInt(tbDatMon.getValueAt(tbDatMon.getSelectedRow(), 0) + ""));
                        int kq = stmt.executeUpdate();
                        if (kq > 0) {
                            String sql1 = "SELECT * FROM OrderDetails od\n"
                                    + "WHERE od.TableID = ? and od.OrderID IN (\n"
                                    + "  SELECT o.OrderID FROM Orders o WHERE o.Stt = 0\n"
                                    + ");";
                            try (PreparedStatement statement = conn.prepareStatement(sql1)) {
                                statement.setInt(1, Integer.parseInt(lblMaBan.getText().substring(4)));
                                ResultSet rs = statement.executeQuery();
                                while (rs.next()) {
                                    num++;
                                }
                                updateMon();
                                if (num == 0) {
                                    xoaHoaDon();
                                }
                            } catch (Exception ex) {

                            }
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa sản phẩm thất bại");
                }
            }
            conn.close();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateMon() {
        int soMonMoi = foodQuantity + quantity;
        try {
            conn = cn.getConnection();
            String sql = "update Food set Quantity = ? where FoodID = ?";
            try (PreparedStatement st2 = conn.prepareStatement(sql)) {
                st2.setInt(1, soMonMoi);
                st2.setInt(2, foodid);
                int rs1 = st2.executeUpdate();
            }
            conn.close();
        } catch (Exception e) {

        }
    }

    private void xoaHoaDon() {
        String sql = "delete from Orders where OrderID = ?";
        try (PreparedStatement statement = conn.prepareStatement(sql)) {
            statement.setInt(1, orderid);
            int kq = statement.executeUpdate();
            if (kq > 0) {
                JOptionPane.showMessageDialog(this, "Xóa hoa don thành công");
                sql = "update Tables set Status = 0 where TableID = ?";
                try (PreparedStatement st2 = conn.prepareStatement(sql)) {
                    st2.setInt(1, Integer.parseInt(Ban.lblMaBan.getText().substring(4)));
                    int rs1 = st2.executeUpdate();
                }
                loadTable();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa hoa don thất bại");
            }

        } catch (Exception ex) {

        }
    }

    public void laySoLuongMonAn() {
        try {
            conn = cn.getConnection();
            String sql = "SELECT * FROM Food WHERE FoodID = ?";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setInt(1, foodid);
                ResultSet rs = st.executeQuery();
                while (rs.next()) {
                    foodQuantity = rs.getInt("Quantity");
                }
                rs.close();
            }
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            Menu menu = new Menu();
            menu.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Ban.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnBan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBan1ActionPerformed

        this.lblMaBan.setText(this.btnBan1.getText());
        loadBang(btnBan1.getText());
        loadTable();

    }//GEN-LAST:event_btnBan1ActionPerformed

    private void btnBan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBan2ActionPerformed
        this.lblMaBan.setText(this.btnBan2.getText());
        loadBang(btnBan2.getText());
        loadTable();
    }//GEN-LAST:event_btnBan2ActionPerformed

    private void btnBan3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBan3ActionPerformed
        this.lblMaBan.setText(this.btnBan3.getText());
        loadBang(btnBan3.getText());
        loadTable();
    }//GEN-LAST:event_btnBan3ActionPerformed

    private void btnBan4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBan4ActionPerformed
        this.lblMaBan.setText(this.btnBan4.getText());
        loadBang(btnBan4.getText());
        loadTable();
    }//GEN-LAST:event_btnBan4ActionPerformed

    private void btnBan5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBan5ActionPerformed
        this.lblMaBan.setText(this.btnBan5.getText());
        loadBang(btnBan5.getText());
        loadTable();
    }//GEN-LAST:event_btnBan5ActionPerformed

    private void btnBan6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBan6ActionPerformed
        this.lblMaBan.setText(this.btnBan6.getText());
        loadBang(btnBan6.getText());
        loadTable();
    }//GEN-LAST:event_btnBan6ActionPerformed

    private void btnBan7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBan7ActionPerformed
        this.lblMaBan.setText(this.btnBan7.getText());
        loadBang(btnBan7.getText());
        loadTable();
    }//GEN-LAST:event_btnBan7ActionPerformed

    private void btnBan8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBan8ActionPerformed
        this.lblMaBan.setText(this.btnBan8.getText());
        loadBang(btnBan8.getText());
        loadTable();
    }//GEN-LAST:event_btnBan8ActionPerformed

    private void btnBan9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBan9ActionPerformed
        this.lblMaBan.setText(this.btnBan9.getText());
        loadBang(btnBan9.getText());
        loadTable();
    }//GEN-LAST:event_btnBan9ActionPerformed

    private void btnBan10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBan10ActionPerformed
        this.lblMaBan.setText(this.btnBan10.getText());
        loadBang(btnBan10.getText());
        loadTable();
    }//GEN-LAST:event_btnBan10ActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        xoaMonAn();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tbDatMonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDatMonMouseClicked

    }//GEN-LAST:event_tbDatMonMouseClicked

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        if (Ban.lblMaBan.getText().equals("Chọn bàn")) {
            JOptionPane.showMessageDialog(this, "Chọn bàn để thanh toán");
            return;
        }
        int count = 0;
        int id = Integer.parseInt(lblMaBan.getText().substring(4));
        for (Table i : tables) {
            if (i.getTableId() == id) {
                if (i.getStatus() == 1) {
                    count++;
                    break;
                }
            }
        }
        if (count == 0) {
            JOptionPane.showMessageDialog(this, "Không có hóa đơn nào");
            return;
        }
        try {
            ThanhToan thanhtoan = new ThanhToan();
            thanhtoan.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(Ban.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed


    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if (tbDatMon.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Hãy chọn một sản phẩm để sua");
        } else {
            try {
                EditOrder ed = new EditOrder();
                ed.setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(Ban.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ban.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ban.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ban.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ban.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ban().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBan1;
    private javax.swing.JButton btnBan10;
    private javax.swing.JButton btnBan2;
    private javax.swing.JButton btnBan3;
    private javax.swing.JButton btnBan4;
    private javax.swing.JButton btnBan5;
    private javax.swing.JButton btnBan6;
    private javax.swing.JButton btnBan7;
    private javax.swing.JButton btnBan8;
    private javax.swing.JButton btnBan9;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatThongTin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    protected static javax.swing.JLabel lblMaBan;
    private javax.swing.JTable tbDatMon;
    // End of variables declaration//GEN-END:variables
}
